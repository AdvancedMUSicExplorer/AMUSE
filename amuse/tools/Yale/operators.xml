<operators>
     
  <!-- Weka operators -->

  <factory class = "edu.udo.cs.yale.tools.WekaOperatorFactory"/>

  <!-- YALE Core -->

  <operator
     name        = "OperatorChain"
     class       = "edu.udo.cs.yale.operator.SimpleOperatorChain"
     description = "A chain of operators that is subsequently applied."
     icon        = "chain"/>

  <operator 
     name        = "ModelApplier"     
     class       = "edu.udo.cs.yale.operator.ModelApplier"
     description = "Applies a model to an example set. This might be a prediction or another data transformation model."
     icon        = "model_applier"/>

  <!-- YALE Experiment -->
     
  <operator 
     name        = "Experiment" 
     class       = "edu.udo.cs.yale.operator.ExperimentOperator"
     description = "The root operator chain, which needs to be the outer most operator of any experiment in Yale."
     icon        = "chain"
     group       = "Core"/>
     
  <operator
     name        = "IOConsumer"
     class       = "edu.udo.cs.yale.operator.IOConsumeOperator"
     description = "This operators simply consumes some unused outputs."
     icon        = "io_consumer"
     group       = "Core"/>

  <operator
     name        = "IOMultiplier"
     class       = "edu.udo.cs.yale.operator.IOMultiplyOperator"
     description = "This operators simply multiplies selected input objects."
     icon        = "io_multiplier"
     group       = "Core"/>

  <operator
     name        = "IOSelector"
     class       = "edu.udo.cs.yale.operator.IOSelector"
     description = "This operators simply selects one of the input objects of the specified type and discards the rest."
     icon        = "io_selector"
     group       = "Core"/>
     
  <operator
     name        = "CommandLineOperator"
     class       = "edu.udo.cs.yale.operator.CommandLineOperator"
     description = "This operator simply executes a command in a shell of the underlying operating system, basically any system command or external program."
     icon        = "command"
     group       = "Core"/>
     
  <operator
     name        = "MacroDefinition"
     class       = "edu.udo.cs.yale.operator.MacroDefinitionOperator"
     description = "This operator can be used to define arbitrary macros which can be used by %{my_macro} in string type parameter values."
     icon        = "macro"
     group       = "Core"/>


  <!-- Validation -->

  <operator 
     name        = "PerformanceEvaluator"     
     class       = "edu.udo.cs.yale.operator.performance.PerformanceEvaluator"
     description = "A performance evaluator delivers as output a list of performance values according to a list of performance criteria."
     group       = "Validation"/>

  <operator 
     name        = "AttributeCounter"     
     class       = "edu.udo.cs.yale.operator.performance.AttributeCounter"
     description = "This operator created a performance vector containing the number of features of the input example set."
     group       = "Validation.Performance"/> 

  <operator 
     name        = "WeightedPerformanceCreator"     
     class       = "edu.udo.cs.yale.operator.performance.WeightedPerformanceCreator"
     description = "Returns a performance vector containing the weighted fitness value of the input criteria."
     group       = "Validation.Performance"/> 

  <operator 
     name        = "MinMaxWrapper"
     class       = "edu.udo.cs.yale.operator.performance.MinMaxWrapper"
     description = "Puts all input criteria into a min-max criterion which delivers the minimum instead of the average or arbitrary weighted combinations."
     group       = "Validation.Performance"/>

  <operator 
     name        = "XValidation"     
     class       = "edu.udo.cs.yale.operator.validation.XValidation"
     description = "XValidation encapsulates a cross-validation in order to estimate the performance of a learning operator."
     group       = "Validation"/>
     
  <operator 
     name        = "BootstrappingValidation"     
     class       = "edu.udo.cs.yale.operator.validation.BootstrappingValidation"
     description = "This operator encapsulates an iterated bootstrapping sampling with performance evaluation on the remaining examples."
     group       = "Validation.Other"/>
     
  <operator 
     name        = "WeightedBootstrappingValidation"     
     class       = "edu.udo.cs.yale.operator.validation.WeightedBootstrappingValidation"
     description = "This operator encapsulates an iterated weighted bootstrapping sampling with performance evaluation on the remaining examples."
     group       = "Validation.Other"/>

  <operator 
     name        = "SimpleValidation"     
     class       = "edu.udo.cs.yale.operator.validation.RandomSplitValidationChain"
     description = "A SimpleValidation randomly splits up the example set into a training and test set and evaluates the model."
     group       = "Validation"/>

  <operator 
     name        = "FixedSplitValidation"     
     class       = "edu.udo.cs.yale.operator.validation.FixedSplitValidationChain"
     description = "A FixedSplitValidation splits up the example set at a fixed point into a training and test set and evaluates the model."
     group       = "Validation.Other"/>

  <operator 
     name        = "WrapperXValidation"     
     class       = "edu.udo.cs.yale.operator.validation.WrapperXValidation"
     description = "Encapsulates a cross-validation experiment to evaluate a feature weighting or selection method (wrapper)."
     group       = "Validation"/>

  <operator 
     name        = "SimpleWrapperValidation"     
     class       = "edu.udo.cs.yale.operator.validation.RandomSplitWrapperValidationChain"
     description = "A simple validation method to check the performance of a feature weighting or selection wrapper."
     group       = "Validation.Other"/>

  <operator 
     name        = "IteratingPerformanceAverage"     
     class       = "edu.udo.cs.yale.operator.validation.IteratingPerformanceAverage"
     description = "Iterates an experiment and builds the average of the results."
     group       = "Validation.Other"/>

  <operator 
     name        = "CFSFeatureSetEvaluator"     
     class       = "edu.udo.cs.yale.operator.validation.CFSFeatureSetEvaluator"
     description = "Calculates a performance measure based on the Correlation (filter evaluation)."
     group       = "Validation.Performance"/>

  <operator 
     name        = "ConsistencyFeatureSetEvaluator"     
     class       = "edu.udo.cs.yale.operator.validation.ConsistencyFeatureSetEvaluator"
     description = "Calculates a performance measure based on the consistency (filter evaluation)."
     group       = "Validation.Performance"/>

  <operator 
     name        = "T-Test"     
     class       = "edu.udo.cs.yale.operator.validation.significance.TTestSignificanceTestOperator"
     description = "Performs a t-test to determine the probability for the null hypothesis 'the actual means are the same'."
     group       = "Validation.Significance"/>

  <operator 
     name        = "Anova"     
     class       = "edu.udo.cs.yale.operator.validation.significance.AnovaSignificanceTestOperator"
     description = "Performs ANalysis Of VAriances to determine the probability for the null hypothesis 'the actual means are the same'."
     group       = "Validation.Significance"/>



  <!-- YALE IO -->

  <operator 
     name        = "AttributeConstructionsWriter"     
     class       = "edu.udo.cs.yale.operator.io.AttributeConstructionsWriter"
     description = "Writes all attributes of an example set to a file. Each line holds the construction description of one attribute."
     group       = "IO.Attributes"/>

  <operator 
     name        = "AttributeConstructionsLoader"     
     class       = "edu.udo.cs.yale.operator.io.AttributeConstructionsLoader"
     description = "Loads all attributes of an example set from a file. Each line holds the construction description of one attribute."
     group       = "IO.Attributes"/>

  <operator 
     name        = "AttributeWeightsWriter"     
     class       = "edu.udo.cs.yale.operator.io.AttributeWeightsWriter"
     description = "Writes the weights of all attributes of an example set to a file. Each line holds the name and the weight of one attribute."
     group       = "IO.Attributes"/>

  <operator 
     name        = "AttributeWeightsLoader"     
     class       = "edu.udo.cs.yale.operator.io.AttributeWeightsLoader"
     description = "Reads the weights of all attributes of an example set from a file. Each line must hold the name and the weight of one attribute."
     group       = "IO.Attributes"/>

  <operator 
     name        = "DatabaseExampleSource"     
     class       = "edu.udo.cs.yale.operator.io.DatabaseExampleSource"
     description = "This operator reads an example set from an SQL database."
     group       = "IO.Examples"/>

  <operator
     name        = "SimpleExampleSource"
     class       = "edu.udo.cs.yale.operator.io.SimpleExampleSource"
     description = "This operator reads an example set from file. It is a simpler version of the ExampleSource operator."
     group       = "IO.Examples"/>
          
  <operator 
     name        = "ExampleSource"     
     class       = "edu.udo.cs.yale.operator.io.ExampleSource"
     description = "This operator reads an example set from file. The operator can be configured to read almost all file formats."
     group       = "IO.Examples"/>

  <operator 
     name        = "ExcelExampleSource"     
     class       = "edu.udo.cs.yale.operator.io.ExcelExampleSource"
     description = "This operator reads an example set from Excel spreadsheet files."
     group       = "IO.Examples"/>
     
  <operator 
     name        = "ExampleSetWriter"     
     class       = "edu.udo.cs.yale.operator.io.ExampleSetWriter"
     description = "Writes the values of all examples to a file."
     group       = "IO.Examples"/>

  <operator 
     name        = "ArffExampleSetWriter"     
     class       = "edu.udo.cs.yale.operator.io.ArffExampleSetWriter"
     description = "Writes the values of all examples into an ARFF-file."
     group       = "IO.Examples"/>

  <operator 
     name        = "XrffExampleSetWriter"     
     class       = "edu.udo.cs.yale.operator.io.XrffExampleSetWriter"
     description = "Writes the values of all examples into an XRFF-file."
     group       = "IO.Examples"/>
     
  <operator 
     name        = "GnuplotWriter"    
     class       = "edu.udo.cs.yale.operator.io.GNUPlotOperator"
     description = "Creates gnuplot files from the data generated by an experiment log operator."
     group       = "IO.Other"/>

  <operator 
     name        = "ArffExampleSource"     
     class       = "edu.udo.cs.yale.operator.io.ArffExampleSource"
     description = "This operator can read arff files."
     group       = "IO.Examples"/>
     
  <operator 
     name        = "XrffExampleSource"     
     class       = "edu.udo.cs.yale.operator.io.XrffExampleSource"
     description = "This operator can read xrff files."
     group       = "IO.Examples"/>

  <operator 
     name        = "CSVExampleSource"
     class       = "edu.udo.cs.yale.operator.io.CSVExampleSource"
     description = "This operator can read csv files."
     group       = "IO.Examples"/>

  <operator 
     name        = "DBaseExampleSource"
     class       = "edu.udo.cs.yale.operator.io.DBaseExampleSource"
     description = "This operator can read dBase files."
     group       = "IO.Examples"/>

  <operator 
     name        = "BibtexExampleSource"
     class       = "edu.udo.cs.yale.operator.io.BibtexExampleSource"
     description = "This operator can read BibTeX files."
     group       = "IO.Examples"/>

  <operator 
     name        = "C45ExampleSource"
     class       = "edu.udo.cs.yale.operator.io.C45ExampleSource"
     description = "This operator can read data and meta given in C4.5 format."
     group       = "IO.Examples"/>

  <operator 
     name        = "SPSSExampleSource"
     class       = "edu.udo.cs.yale.operator.io.SPSSExampleSource"
     description = "This operator can read SPSS data files."
     group       = "IO.Examples"/>

  <operator 
     name        = "SparseFormatExampleSource"
     class       = "edu.udo.cs.yale.operator.io.SparseFormatExampleSource"
     description = "Reads an example file in sparse format."
     group       = "IO.Examples"/>

  <operator 
     name        = "ModelLoader"     
     class       = "edu.udo.cs.yale.operator.io.ModelLoader"
     description = "Reads a model from a given file."
     group       = "IO.Models"/>

  <operator 
     name        = "ModelWriter"     
     class       = "edu.udo.cs.yale.operator.io.ModelWriter"
     description = "Writes a model to a given file."
     group       = "IO.Models"/>

  <operator 
     name        = "ParameterSetLoader"     
     class       = "edu.udo.cs.yale.operator.io.ParameterSetLoader"
     description = "Reads a parameter set from a file."
     group       = "IO.Other"/>

  <operator 
     name        = "ParameterSetWriter"     
     class       = "edu.udo.cs.yale.operator.io.ParameterSetWriter"
     description = "Writes a parameter set into a file."
     group       = "IO.Other"/>

  <operator 
     name        = "ThresholdLoader"     
     class       = "edu.udo.cs.yale.operator.io.ThresholdLoader"
     description = "Loads a threshold from a file (used for transforming soft into crisp predictions)."
     group       = "IO.Other"/>

  <operator 
     name        = "ThresholdWriter"     
     class       = "edu.udo.cs.yale.operator.io.ThresholdWriter"
     description = "Writes a threshold to a file (used for transforming soft into crisp predictions)."
     group       = "IO.Other"/>
     
  <operator
     name        = "IOContainerWriter"
     class       = "edu.udo.cs.yale.operator.io.IOContainerWriter"
     description = "Writes all current IO objects to a file."
     group       = "IO.Other"/>

  <operator
     name        = "IOContainerReader"
     class       = "edu.udo.cs.yale.operator.io.IOContainerReader"
     description = "Reads an IOContainer from a file."
     group       = "IO.Other"/>
       
  <operator
     name        = "IOObjectWriter"
     class       = "edu.udo.cs.yale.operator.io.IOObjectWriter"
     description = "Generic writer for all types of IOObjects."
     group       = "IO.Other"/>

  <operator
     name        = "IOObjectReader"
     class       = "edu.udo.cs.yale.operator.io.IOObjectReader"
     description = "Generic reader for all types of IOObjects."
     group       = "IO.Other"/>
                         
  <operator 
     name        = "ResultWriter"     
     class       = "edu.udo.cs.yale.operator.io.ResultWriter"
     description = "This operator can be used at each point in an operator chain and and writes current results to the console or to a file."
     group       = "IO.Results"/>

  <operator 
     name        = "PerformanceWriter"     
     class       = "edu.udo.cs.yale.operator.io.PerformanceWriter"
     description = "This operator can be used to write the input performance into a file."
     group       = "IO.Results"/>

  <operator 
     name        = "PerformanceLoader"     
     class       = "edu.udo.cs.yale.operator.io.PerformanceLoader"
     description = "This operator can be used to load a performance vector from a file."
     group       = "IO.Results"/>


  <!-- YALE Learner -->

  <operator 
     name        = "Y-NaiveBayes"     
     class       = "edu.udo.cs.yale.operator.learner.NaiveBayes"
     description = "Returns classification model using estimated normal distributions."
     group       = "Learner.Bayes"/>

  <operator 
     name        = "AverageLearner"     
     class       = "edu.udo.cs.yale.operator.learner.lazy.AverageLearner"
     description = "Actually no learning scheme since the prediction is the average of all attribute values."
     deprecation = "Deprecated: This learner will not be part of future Yale releases."
     group       = "Learner.Lazy"/>

  <operator 
     name        = "Y-LinearRegression"     
     class       = "edu.udo.cs.yale.operator.learner.functions.LinearRegression"
     description = "Linear regression."
     group       = "Learner.Functions"/>
     
  <operator 
     name        = "LogisticRegression"     
     class       = "edu.udo.cs.yale.operator.learner.functions.LogisticRegression"
     description = "Logistic regression."
     group       = "Learner.Functions"/>

  <operator 
     name        = "OrdinalLogisticRegression"     
     class       = "edu.udo.cs.yale.operator.learner.functions.OrdinalLogisticRegression"
     description = "Ordinal logistic regression."
     group       = "Learner.Functions"/>

  <operator 
     name        = "Y-AdditiveRegression"     
     class       = "edu.udo.cs.yale.operator.learner.meta.AdditiveRegression"
     description = "Additive regression operator allowing all learners from Yale (not restricted to Weka learners)."
     group       = "Learner.Meta"/>
     
  <operator 
     name        = "Y-Bagging"     
     class       = "edu.udo.cs.yale.operator.learner.meta.Bagging"
     description = "Bagging operator allowing all learners from Yale (not restricted to Weka learners)."
     group       = "Learner.Meta"/>
     
  <operator 
     name        = "BayesianBoosting"     
     class       = "edu.udo.cs.yale.operator.learner.meta.BayesianBoosting"
     description = "Boosting operator based on Bayes' theorem."
     group       = "Learner.Meta"/>

  <operator 
     name        = "IteratingGSS"     
     class       = "edu.udo.cs.yale.operator.learner.igss.IteratingGSS"
     description = "Combines Generic Sequential Sampling by Scheffer/Wrobel with Knowledge-Based Sampling by Scholz."
     group       = "Learner.Rules"/>
     
  <operator 
     name        = "Y-AdaBoost"     
     class       = "edu.udo.cs.yale.operator.learner.meta.AdaBoost"
     description = "Boosting operator allowing all learners from Yale (not restricted to Weka learners)."
     group       = "Learner.Meta"/>

  <operator
     name        = "BestRuleInduction"
     class       = "edu.udo.cs.yale.operator.learner.BestRuleInduction"
     description = "Returns a best conjunctive rule with respect to the WRAcc metric for boolean prediction problems and polynomial attributes."
     group       = "Learner.Rules"/>

  <operator
     name        = "MultiCriterionDecisionStump"
     class       = "edu.udo.cs.yale.operator.learner.MultiCriterionDecisionStumps"
     description = "A quick DecisionStump clone that allows to specify different utility functions."
     group       = "Learner.Trees"/>
     
  <operator 
     name        = "NeuralNet"     
     class       = "edu.udo.cs.yale.operator.learner.neuralnet.NeuralNetLearner"
     description = "Learns a neural net from the input data."
     group       = "Learner.Functions"/>
     
  <operator 
     name        = "DefaultLearner"     
     class       = "edu.udo.cs.yale.operator.learner.lazy.DefaultLearner"
     description = "Learns a default value."
     group       = "Learner.Lazy"/>

  <operator
     name        = "TransformedRegression"
     class       = "edu.udo.cs.yale.operator.learner.meta.TransformedRegression"
     description = "This learner performs regression by transforming the labels and calling an inner regression learner."
     group       = "Learner.Meta"/>
     
  <operator 
     name        = "ClassificationByRegression"
     class       = "edu.udo.cs.yale.operator.learner.meta.ClassificationByRegression"
     description = "This operator chain must contain a regression learner and allows to learn classifications tasks with more than two classes."
     group       = "Learner.Meta"/>
     
  <operator 
     name        = "JMySVMLearner"     
     class       = "edu.udo.cs.yale.operator.learner.kernel.JMySVMLearner"
     description = "JMySVMLearner provides an internal Java implementation of the mySVM by Stefan Rueping."
     group       = "Learner.Kernel"/>

  <operator 
     name        = "MyKLRLearner"     
     class       = "edu.udo.cs.yale.operator.learner.kernel.MyKLRLearner"
     description = "MyKLRLearner provides an internal Java implementation of the myKLR by Stefan Rueping."
     group       = "Learner.Kernel"/>

  <operator 
     name        = "LibSVMLearner"     
     class       = "edu.udo.cs.yale.operator.learner.kernel.LibSVMLearner"
     description = "LibSVMLearner encapsulates the Java libsvm, an SVM learner."
     group       = "Learner.Kernel"/>

  <operator 
     name        = "EvoSVM"     
     class       = "edu.udo.cs.yale.operator.learner.kernel.evosvm.EvoSVM"
     description = "EvoSVM uses an Evolutionary Strategy for optimization."
     group       = "Learner.Kernel"/>

  <operator 
     name        = "PsoSVM"     
     class       = "edu.udo.cs.yale.operator.learner.kernel.evosvm.PSOSVM"
     description = "PsoSVM uses a Particle Swarm Optimization for optimization."
     group       = "Learner.Kernel"/>

  <operator 
     name        = "RVMLearner"
     class       = "edu.udo.cs.yale.operator.learner.kernel.RVMLearner"
     description = "An implementation of a relevance vector machine."
     group       = "Learner.Kernel"/>

  <operator 
     name        = "GPLearner"
     class       = "edu.udo.cs.yale.operator.learner.kernel.GPLearner"
     description = "An implementation of Gaussian Processes."
     group       = "Learner.Kernel"/>
             

  <!-- Data preprocessing -->

  <operator 
     name        = "IdTagging"     
     class       = "edu.udo.cs.yale.operator.preprocessing.IdTagging"
     description = "Adds a new id attribute to the example set, each example is tagged with an incremented number."
     group       = "Preprocessing"/>

  <operator 
     name        = "AttributeSubsetPreprocessing"     
     class       = "edu.udo.cs.yale.operator.preprocessing.AttributeSubsetPreprocessing"
     description = "Selects one attribute (or a subset) via a regular expression and applies its inner operators to the resulting subset."
     group       = "Preprocessing.Attributes"/>
     
  <operator 
     name        = "AttributeWeightsApplier"     
     class       = "edu.udo.cs.yale.operator.features.AttributeWeightsApplier"
     description = "Deselects attributes with weight 0 and calculates new values for numeric attributes."
     group       = "Preprocessing.Attributes"/>

  <operator 
     name        = "PrincipalComponentsGenerator"     
     class       = "edu.udo.cs.yale.operator.features.transformation.PrincipalComponentsTransformation"
     description = "Build the principal components of the given data."
     group       = "Preprocessing.Attributes.Transformation"/>

  <operator 
     name        = "RenameAttribute"     
     class       = "edu.udo.cs.yale.operator.preprocessing.filter.RenameAttributeOperator"
     description = "This operator can rename an attribute and change its type (regular, special, label,...)."
     deprecation = "Deprecated : use the ChangeAttributeName operator for changing names and the ChangeAttributeType operator for changing types."
     group       = "Preprocessing.Attributes.Filter"/>

  <operator 
     name        = "ChangeAttributeName"
     class       = "edu.udo.cs.yale.operator.preprocessing.filter.ChangeAttributeName"
     description = "This operator can be used to rename an attribute."
     group       = "Preprocessing.Attributes.Filter"/>
     
  <operator 
     name        = "ChangeAttributeType"
     class       = "edu.udo.cs.yale.operator.preprocessing.filter.ChangeAttributeType"
     description = "This operator can be used to change the attribute type (regular, special, label, id...)."
     group       = "Preprocessing.Attributes.Filter"/>
     
  <operator 
     name        = "TFIDFFilter"     
     class       = "edu.udo.cs.yale.operator.preprocessing.filter.TFIDFFilter"
     description = "Performs a TF-IDF filtering to the input data set."
     group       = "Preprocessing.Data.Filter"/>

  <operator 
     name        = "Single2Series"     
     class       = "edu.udo.cs.yale.operator.preprocessing.filter.SingleAttributes2ValueSeries"
     description = "Changes the value type of all single valued attributes and forms a value series from all attributes."
     group       = "Preprocessing.Data.Filter"/>

  <operator 
     name        = "Series2WindowExamples"
     class       = "edu.udo.cs.yale.operator.preprocessing.filter.UnivariateSeries2WindowExamples"
     description = "Creates examples from an univariate value series data by windowing and using a label value with respect to a user defined prediction horizon."
     group       = "Preprocessing.Data.Filter"/>

  <operator 
     name        = "MultivariateSeries2WindowExamples"
     class       = "edu.udo.cs.yale.operator.preprocessing.filter.MultivariateSeries2WindowExamples"
     description = "Creates examples from a multivariate value series data by windowing and using a label value with respect to a user defined prediction horizon in one of the dimensions."
     group       = "Preprocessing.Data.Filter"/>

  <operator 
     name        = "MergeNominalValues"     
     class       = "edu.udo.cs.yale.operator.preprocessing.filter.MergeNominalValues"
     description = "Merges two nominal values of a specified attribute."
     group       = "Preprocessing.Attributes.Filter"/>

  <operator 
     name        = "AttributeWeightSelection"
     class       = "edu.udo.cs.yale.operator.features.selection.AttributeWeightSelection"
     description = "Selects only attributes which weights fulfill a given relation with respect to the input attribute weights."
     group       = "Preprocessing.Attributes.Selection"/>

  <operator 
     name        = "BruteForce"     
     class       = "edu.udo.cs.yale.operator.features.selection.BruteForceSelection"
     description = "Selects the best features for an example set by trying all possible combinations of attribute selections."
     group       = "Preprocessing.Attributes.Selection"/>
     
  <operator 
     name        = "FeatureSelection"     
     class       = "edu.udo.cs.yale.operator.features.selection.FeatureSelectionOperator"
     description = "This operator realizes feature selection by forward selection and backward elimination, respectively."
     group       = "Preprocessing.Attributes.Selection"/>

  <operator 
     name        = "GeneticAlgorithm"     
     class       = "edu.udo.cs.yale.operator.features.selection.GeneticAlgorithm"
     description = "A genetic algorithm for feature selection."
     group       = "Preprocessing.Attributes.Selection"/>

  <operator 
     name        = "WeightGuidedFeatureSelection"
     class       = "edu.udo.cs.yale.operator.features.selection.WeightGuidedSelectionOperator"
     description = "Adds iteratively features according to input attribute weights"
     group       = "Preprocessing.Attributes.Selection"/>

  <operator 
     name        = "WeightOptimization"
     class       = "edu.udo.cs.yale.operator.meta.WeightOptimization"
     description = "Feature selection (forward, backward) guided by weights."
     group       = "Preprocessing.Attributes.Selection"/>

  <operator 
     name        = "IterativeWeightOptimization"
     class       = "edu.udo.cs.yale.operator.meta.IterativeWeightOptimization"
     description = "Feature selection (forward, backward) guided by weights. Weights have to be updated after each iteration"
     group       = "Preprocessing.Attributes.Selection"/>

  <operator 
     name        = "GeneratingGeneticAlgorithm"     
     class       = "edu.udo.cs.yale.operator.features.construction.GeneratingGeneticAlgorithm"
     description = "A genetic algorithm for feature selection and feature generation (GGA)."
     group       = "Preprocessing.Attributes.Generation"/>

  <operator 
     name        = "AGA"     
     class       = "edu.udo.cs.yale.operator.features.construction.AGA"
     description = "Another (improved) genetic algorithm for feature selection and feature generation (AGA)."
     group       = "Preprocessing.Attributes.Generation"/>
     
  <operator 
     name        = "GeneratingForwardSelection"     
     class       = "edu.udo.cs.yale.operator.features.construction.GeneratingForwardSelection"
     description = "This operator is a kind of nested forward selection and thus is (in contrast to a genetic algorithm) a directed search."
     group       = "Preprocessing.Attributes.Generation"/>

  <operator 
     name        = "YAGGA"     
     class       = "edu.udo.cs.yale.operator.features.construction.YAGGA"
     description = "Yet Another GGA (Generating Geneting Algorithm). On average individuals (= selected attribute sets) will keep their original length, unless longer or shorther ones prove to have a better fitness."
     group       = "Preprocessing.Attributes.Generation"/>

  <operator 
     name        = "YAGGA2"     
     class       = "edu.udo.cs.yale.operator.features.construction.YAGGA2"
     description = "Improved version of Yet Another GGA (Generating Geneting Algorithm)."
     group       = "Preprocessing.Attributes.Generation"/>

  <operator 
     name        = "EvolutionaryFeatureAggregation"     
     class       = "edu.udo.cs.yale.operator.features.aggregation.EvolutionaryFeatureAggregation"
     description = "A generating genetic algorithm for unsupervised learning (experimental)."
     group       = "Preprocessing.Attributes.Aggregation"/>

  <operator 
     name        = "ExampleSet2AttributeWeights"   
     class       = "edu.udo.cs.yale.operator.features.weighting.AttributeWeightsCreator"
     description = "This operator simply creates new attribute weights of 1 for each input attribute."
     group       = "Preprocessing.Attributes.Weighting"/>

  <operator 
     name        = "CorpusBasedWeighting"   
     class       = "edu.udo.cs.yale.operator.features.weighting.CorpusBasedFeatureWeighting"
     description = "This operator uses a corpus of examples to characterize a single class by setting feature weights."
     group       = "Preprocessing.Attributes.Weighting"/>

  <operator 
     name        = "ForwardWeighting"   
     class       = "edu.udo.cs.yale.operator.features.weighting.ForwardWeighting"
     description = "Assumes that features are independent and optimizes the weights of the attributes with a linear search."
     group       = "Preprocessing.Attributes.Weighting"/>

  <operator 
     name        = "BackwardWeighting"   
     class       = "edu.udo.cs.yale.operator.features.weighting.BackwardWeighting"
     description = "Assumes that features are independent and optimizes the weights of the attributes with a linear search."
     group       = "Preprocessing.Attributes.Weighting"/>

  <operator 
     name        = "EvolutionaryWeighting"
     class       = "edu.udo.cs.yale.operator.features.weighting.EvolutionaryWeighting"
     description = "Weight the features with an evolutionary approach."
     group       = "Preprocessing.Attributes.Weighting"/>

  <operator 
     name        = "InteractiveAttributeWeighting"
     class       = "edu.udo.cs.yale.operator.features.weighting.InteractiveAttributeWeighting"
     description = "Shows a window with feature weights and allows users to change them."
     group       = "Preprocessing.Attributes.Weighting"/>

  <operator 
     name        = "StandardDeviationWeighting"   
     class       = "edu.udo.cs.yale.operator.features.weighting.StandardDeviationWeighting"
     description = "Computes weights based on the (normalized) standard deviation of the attributes."
     group       = "Preprocessing.Attributes.Weighting"/>

  <operator 
     name        = "Attributes2RealValues"     
     class       = "edu.udo.cs.yale.operator.preprocessing.filter.Attribute2RealValueMapping"
     description = "Maps all values to real values."
     group       = "Preprocessing.Attributes.Filter"/>
     
  <operator 
     name        = "Numeric2Binary"     
     class       = "edu.udo.cs.yale.operator.preprocessing.filter.NumericToBinary"
     description = "Maps all numeric values to 'false' if they are in the specified range (typical: equal 0.0) and to 'true' otherwise."
     group       = "Preprocessing.Attributes.Filter"/>

  <operator 
     name        = "AttributeValueMapper"     
     class       = "edu.udo.cs.yale.operator.preprocessing.filter.AttributeValueMapper"
     description = "Maps certain values of an attribute to other values."
     group       = "Preprocessing.Attributes.Filter"/>

  <operator 
     name        = "BinDiscretization"     
     class       = "edu.udo.cs.yale.operator.preprocessing.discretization.SimpleBinDiscretization"
     description = "Discretize numerical attributes into a user defined number of bins."
     group       = "Preprocessing.Data.Discretization"/>

  <operator 
     name        = "FrequencyDiscretization"     
     class       = "edu.udo.cs.yale.operator.preprocessing.discretization.FrequencyDiscretizer"
     description = "Discretize numerical attributes into a user defined number of bins with equal frequency."
     group       = "Preprocessing.Data.Discretization"/>

  <operator 
     name        = "MinimalEntropyPartitioning" 
     class       = "edu.udo.cs.yale.operator.preprocessing.discretization.MinimalEntropyPartitioning"
     description = "Discretizes numerical attributes. Bin boundaries are chosen as to minimize the entropy in the induced partitions."
     group       = "Preprocessing.Data.Discretization"/>

  <operator 
     name        = "ExampleFilter"
     class       = "edu.udo.cs.yale.operator.preprocessing.filter.ExampleFilter"
     description = "This operator only allows examples which fulfill a specified condition."
     group       = "Preprocessing.Data.Filter"/>
     
  <operator 
     name        = "Permutation"     
     class       = "edu.udo.cs.yale.operator.preprocessing.filter.PermutationOperator"
     description = "Permutates the examples in the table. Caution: will increase memory usage!"
     group       = "Preprocessing.Data.Filter"/>

  <operator 
     name        = "FeatureGeneration"     
     class       = "edu.udo.cs.yale.operator.features.construction.FeatureGenerationOperator"
     description = "The feature generation operator generates new user defined features."
     group       = "Preprocessing.Attributes.Generation"/>

  <operator 
     name        = "LinearCombination"     
     class       = "edu.udo.cs.yale.operator.features.construction.LinearCombinationOperator"
     description = "This operator created a new example set containing only one feature: the linear combination of all input attributes."
     group       = "Preprocessing.Attributes.Generation"/>
     
  <operator 
     name        = "CompleteFeatureGeneration"     
     class       = "edu.udo.cs.yale.operator.features.construction.CompleteFeatureGenerationOperator"
     description = "The feature generation operator generates new features via applying a set of functions on all features."
     group       = "Preprocessing.Attributes.Generation"/>

  <operator 
     name        = "FourierTransform"     
     class       = "edu.udo.cs.yale.operator.features.transformation.FourierTransform"
     description = "Uses the label as function of each attribute and calculates the fourier transformations as new attributes."
     group       = "Preprocessing.Attributes.Transformation"/>

  <operator 
     name        = "FeatureValueTypeFilter"
     class       = "edu.udo.cs.yale.operator.preprocessing.filter.FeatureValueTypeFilter"
     description = "This operator switches off those features whose value type matches the given one."
     group       = "Preprocessing.Attributes.Filter"/>

  <operator 
     name        = "FeatureBlockTypeFilter"
     class       = "edu.udo.cs.yale.operator.preprocessing.filter.FeatureBlockTypeFilter"
     description = "This operator switches off those features whose block type matches the given one."
     group       = "Preprocessing.Attributes.Filter"/>

  <operator 
     name        = "FeatureNameFilter"
     class       = "edu.udo.cs.yale.operator.preprocessing.filter.FeatureNameFilter"
     description = "This operator switches off those features whose name matches the given one (regular expressions are also allowed)."
     group       = "Preprocessing.Attributes.Filter"/>

  <operator
     name        = "FeatureRangeRemoval"
     class       = "edu.udo.cs.yale.operator.preprocessing.filter.FeatureRangeRemoval"
     description = "This operator removes a range of features."
     group       = "Preprocessing.Attributes.Filter"/>

  <operator 
     name        = "InfiniteValueReplenishment"     
     class       = "edu.udo.cs.yale.operator.preprocessing.filter.InfiniteValueReplenishment"
     description = "Replaces infinite values in examples."
     group       = "Preprocessing.Data.Filter"/>

  <operator 
     name        = "Sampling"     
     class       = "edu.udo.cs.yale.operator.preprocessing.sampling.SimpleSampling"
     description = "Creates a sample from an example set by drawing a fraction."
     group       = "Preprocessing.Data.Sampling"/>

  <operator 
     name        = "Bootstrapping"     
     class       = "edu.udo.cs.yale.operator.preprocessing.sampling.Bootstrapping"
     description = "Creates a bootstrapped sample by sampling with replacement."
     group       = "Preprocessing.Data.Sampling"/>

  <operator 
     name        = "WeightedBootstrapping"     
     class       = "edu.udo.cs.yale.operator.preprocessing.sampling.WeightedBootstrapping"
     description = "Creates a bootstrapped sample by weighted sampling with replacement."
     group       = "Preprocessing.Data.Sampling"/>
          
  <operator 
     name        = "AbsoluteSampling"     
     class       = "edu.udo.cs.yale.operator.preprocessing.sampling.AbsoluteSampling"
     description = "Creates a sample from an example set by drawing an exact number of examples."
     group       = "Preprocessing.Data.Sampling"/>

  <operator 
     name        = "StratifiedSampling"     
     class       = "edu.udo.cs.yale.operator.preprocessing.sampling.StratifiedSampling"
     description = "Creates a stratified sample from an example set by drawing a fraction."
     group       = "Preprocessing.Data.Sampling"/>

  <operator 
     name        = "ModelBasedSampling"     
     class       = "edu.udo.cs.yale.operator.preprocessing.sampling.ModelBasedSampling"
     description = "Creates a sample from an example set. The sampling is based on a model and is constructed to focus on examples not yet explained."
     group       = "Preprocessing.Data.Sampling"/>

  <operator
     name        = "MissingValueReplenishment"     
     class       = "edu.udo.cs.yale.operator.preprocessing.filter.MissingValueReplenishment"
     description = "Replaces missing values in examples."
     group       = "Preprocessing.Data.Filter"/>

  <operator 
     name        = "MissingValueImputation"
     class       = "edu.udo.cs.yale.operator.preprocessing.filter.MissingValueImputation"
     description = "Replaces missing values in examples by applying a model learned for missing values."
     group       = "Preprocessing.Data.Filter"/>

  <operator 
     name        = "Normalization"     
     class       = "edu.udo.cs.yale.operator.preprocessing.normalization.Normalization"
     description = "Normalizes the attribute values for a specified range."
     group       = "Preprocessing"/>

  <operator 
     name        = "Nominal2Binary"     
     class       = "edu.udo.cs.yale.operator.preprocessing.filter.NominalToBinary"
     description = "Maps all nominal values to binary attributes."
     group       = "Preprocessing.Attributes.Filter"/>

  <operator 
     name        = "RemoveUselessAttributes"
     class       = "edu.udo.cs.yale.operator.features.selection.RemoveUselessFeatures"
     description = "Remove all useless attributes from an example set."
     group       = "Preprocessing.Attributes.Selection"/>

  <operator 
     name        = "NoiseGenerator"
     class       = "edu.udo.cs.yale.operator.preprocessing.NoiseOperator"
     description = "Adds noise to existing attributes or add random attributes."
     group       = "Preprocessing.Other"/>

  <operator 
     name        = "Obfuscator"     
     class       = "edu.udo.cs.yale.operator.preprocessing.Obfuscator"
     description = "Replaces all nominal values and attribute names by random strings."
     group       = "Preprocessing.Other"/>

  <operator 
     name        = "DeObfuscator"     
     class       = "edu.udo.cs.yale.operator.preprocessing.Deobfuscator"
     description = "Replaces all obfuscated values and attribute names by the ones given in a file."
     group       = "Preprocessing.Other"/>

  <operator 
     name        = "ExampleSetJoin"     
     class       = "edu.udo.cs.yale.operator.preprocessing.ExampleSetJoin"
     description = "Build the join of two example sets using the id attributes of the sets in order to identify the same examples."
     group       = "Preprocessing.Other"/>

  <operator 
     name        = "ExampleSetMerge"     
     class       = "edu.udo.cs.yale.operator.preprocessing.ExampleSetMerge"
     description = "Build a merged example set from two or more compatible example sets by adding all examples into a combined set."
     group       = "Preprocessing.Other"/>
          
  <operator 
     name        = "PCA"
     class       = "edu.udo.cs.yale.operator.features.transformation.PCA"
     description = "Performs a principal component analysis (PCA) using the covariance matrix. This implementation does not use the Weka class."
     group       = "Preprocessing.Attributes.Transformation"/>

  <operator 
     name        = "SOMDimensionalityReduction"
     class       = "edu.udo.cs.yale.operator.features.transformation.SOMDimensionalityReduction"
     description = "Trains a self-organizing map and applyes the examples on the map. The resulting coordinates are used as new attributes."
     group       = "Preprocessing.Attributes.Transformation"/>
     
  <operator 
     name        = "GHA"
     class       = "edu.udo.cs.yale.operator.features.transformation.GHA"
     description = "Generalized Hebbian Algorithm (GHA). Performs an iterative principal components analysis."
     group       = "Preprocessing.Attributes.Transformation"/>

  <operator 
     name        = "FastICA"
     class       = "edu.udo.cs.yale.operator.features.transformation.FastICA"
     description = "Performs an independent component analysis (ICA)."
     group       = "Preprocessing.Attributes.Transformation"/>

  <operator 
     name        = "ComponentWeights"
     class       = "edu.udo.cs.yale.operator.features.weighting.ComponentWeights"
     description = "Creates the AttributeWeights of models containing components like PCA, GHA or FastICA."
     group       = "Preprocessing.Attributes.Weighting"/>

  <operator 
     name        = "RemoveCorrelatedFeatures"
     class       = "edu.udo.cs.yale.operator.features.selection.RemoveCorrelatedFeatures"
     description = "Removes correlated features."
     group       = "Preprocessing.Attributes.Selection"/>

  <operator 
     name        = "SplitSVMModel"
     class       = "edu.udo.cs.yale.operator.features.transformation.SplitSVMModel"
     description = "Splits a JMySVMModel into an ExampleSet of the SVs and the AttributeWeights."
     group       = "Preprocessing.Other"/>

  <operator 
     name        = "FunctionValueSeries"
     class       = "edu.udo.cs.yale.operator.features.transformation.FunctionValueSeries"
     description = "Calculates a series of function values for every example."
     group       = "Preprocessing.Other"/>

  <operator 
     name        = "HyperplaneProjection"
     class       = "edu.udo.cs.yale.operator.features.transformation.HyperplaneProjection"
     description = "Projects the examples onto the hyperplane using AttributeWeights as the normal."
     group       = "Preprocessing.Other"/>


  <!-- YALE Postprocessing Operators -->

  <operator 
     name        = "SplitChain" 
     class       = "edu.udo.cs.yale.operator.postprocessing.RatioSplitChain"
     description = "Splits an example set in two parts based on a user defined ratio and uses the output of the first child and the second part as input for the second child."
     group       = "Postprocessing"/>

  <operator 
     name        = "AbsoluteSplitChain" 
     class       = "edu.udo.cs.yale.operator.postprocessing.AbsoluteSplitChain"
     description = "Splits an example set in two parts based on user defined set sizes and uses the output of the first child and the second part as input for the second child."
     group       = "Postprocessing"/>
     
  <operator 
     name        = "PlattScaling"     
     class       = "edu.udo.cs.yale.operator.postprocessing.PlattScaling"
     description = "Turns confidence scores of boolean classifiers into probability estimates."
     group       = "Postprocessing"/>

  <operator 
     name        = "ThresholdFinder"     
     class       = "edu.udo.cs.yale.operator.postprocessing.ThresholdFinder"
     description = "Finds a threshold for given prediction confidences (soft predictions) , costs and distributional information in order to turn it into a crisp classification. The optimization step is based on ROC analysis."
     group       = "Postprocessing"/>

  <operator 
     name        = "ThresholdCreator"     
     class       = "edu.udo.cs.yale.operator.postprocessing.ThresholdCreator"
     description = "Creates a user defined threshold for given prediction confidences (soft predictions) in order to turn it into a crisp classifier."
     group       = "Postprocessing"/>

  <operator 
     name        = "ThresholdApplier"     
     class       = "edu.udo.cs.yale.operator.postprocessing.ThresholdApplier"
     description = "Applies a threshold on soft classified data."
     group       = "Postprocessing"/>


  <!-- YALE Meta Operators -->

  <operator 
     name        = "ExperimentEmbedder" 
     class       = "edu.udo.cs.yale.operator.meta.ExperimentEmbeddingOperator"
     description = "This operator embeds a complete experiment previously written into a file."
     group       = "Meta"/>
     
  <operator 
     name        = "OperatorEnabler" 
     class       = "edu.udo.cs.yale.operator.meta.OperatorEnabler"
     description = "This operator can be used to automatically enable or disable inner operators."
     group       = "Meta"/>
     
  <operator 
     name        = "LearningCurve"     
     class       = "edu.udo.cs.yale.operator.validation.LearningCurveOperator"
     description = "Iterates its inner operator for an increasing number of sample and collects the performances."
     group       = "Meta"/>

  <operator 
     name        = "ExampleSetIterator"     
     class       = "edu.udo.cs.yale.operator.meta.ExampleSetIterator"
     description = "Performs its inner operators for each example set found in input."
     group       = "Meta"/>

  <operator 
     name        = "MultipleLabelIterator"     
     class       = "edu.udo.cs.yale.operator.meta.MultipleLabelIterator"
     description = "Performs its inner operators for each label found in input example set."
     group       = "Meta"/>

 <operator
     name        = "RepeatUntilOperatorChain"
     class       = "edu.udo.cs.yale.operator.meta.RepeatUntilOperatorChain"
     description = "Performs its inner operators until some condition is met."
     group       = "Meta"/>
          
  <operator 
     name        = "IteratingOperatorChain"     
     class       = "edu.udo.cs.yale.operator.meta.IteratingOperatorChain"
     description = "Performs its inner operators k times."
     group       = "Meta"/>

  <operator 
     name        = "RandomOptimizer"     
     class       = "edu.udo.cs.yale.operator.meta.RandomOptimizationChain"
     description = "Performs its inner operators k times and returns the best results."
     group       = "Meta"/>

  <operator 
     name        = "ParameterSetter"
     class       = "edu.udo.cs.yale.operator.meta.ParameterSetter"
     description = "Applies a set of parameters. Operator names may be remapped."
     group       = "Meta.Parameter"/>

  <operator 
     name        = "ParameterCloner"
     class       = "edu.udo.cs.yale.operator.meta.ParameterCloner"
     description = "Applies a set of parameters of a source operator on a target operator."
     group       = "Meta.Parameter"/>

  <operator 
     name        = "GridParameterOptimization"     
     class       = "edu.udo.cs.yale.operator.meta.GridSearchParameterOptimizationOperator"
     description = "This operator finds the optimal values for parameters."
     group       = "Meta.Parameter"/>

  <operator 
     name        = "QuadraticParameterOptimization"     
     class       = "edu.udo.cs.yale.operator.meta.QuadraticParameterOptimizationOperator"
     description = "This operator finds the optimal values for parameters using a quadratic interaction model."
     group       = "Meta.Parameter"/>

  <operator 
     name        = "EvolutionaryParameterOptimization"
     class       = "edu.udo.cs.yale.operator.meta.EvolutionaryParameterOptimizationOperator"
     description = "This operator finds the optimal values for parameters using an evolutionary computation approach."
     group       = "Meta.Parameter"/>

  <operator 
     name        = "ParameterIteration"     
     class       = "edu.udo.cs.yale.operator.meta.ParameterIteration"
     description = "This operator just iterates through all defined parameter combinations."
     group       = "Meta.Parameter"/>

  <operator 
     name        = "AverageBuilder"     
     class       = "edu.udo.cs.yale.operator.meta.AverageBuilder"
     description = "Builds the average of input average vectors (e.g. performance) of the same type."
     group       = "Meta"/>

  <operator 
     name        = "XVPrediction"     
     class       = "edu.udo.cs.yale.operator.meta.XVPrediction"
     description = "Predicts the examples in a cross-validation-like fashion."
     group       = "Meta"/>


  <!-- YALE Visualization Operators -->

  <operator 
     name        = "ExperimentLog"     
     class       = "edu.udo.cs.yale.operator.visualization.ExperimentLogOperator"
     description = "Saves almost arbitrary data to a log file and create statistics for online plotting of values/parameters provided by operators."
     group       = "Visualization"/>

  <operator 
     name        = "ExampleVisualizer"     
     class       = "edu.udo.cs.yale.operator.visualization.ExampleVisualizationOperator"
     description = "Allows the visualization of examples (attribute values) in the plot view of an example set (double click on data point)."
     group       = "Visualization"/>

  <operator
     name        = "DataStatistics"     
     class       = "edu.udo.cs.yale.operator.visualization.DataStatisticsOperator"
     description = "Calculates some simple data statistics usually displayed by the GUI (only necessary for command line experiments)."
     group       = "Visualization"/>
     
  <operator 
     name        = "CorrelationMatrix"
     class       = "edu.udo.cs.yale.operator.visualization.CorrelationMatrixOperator"
     description = "Determines the correlation between all attributes and can produce a weight vector based on correlations."
     group       = "Visualization"/>
     
  <operator
     name        = "LiftChart"     
     class       = "edu.udo.cs.yale.operator.visualization.LiftChartGenerator"
     description = "Generates a lift chart for the given binominal model and input data set."
     group       = "Visualization"/>

  <operator
     name        = "ROCChart"     
     class       = "edu.udo.cs.yale.operator.visualization.ROCChartGenerator"
     description = "Generates a ROC chart for the given binominal model and input data set."
     group       = "Visualization"/>
     
     
  <!-- YALE Data generation Operators -->

  <operator 
     name        = "ExampleSetGenerator"     
     class       = "edu.udo.cs.yale.operator.generator.ExampleSetGenerator"
     description = "Generates an example set based on numerical attributes."
     group       = "IO.Generator"/>

  <operator 
     name        = "NominalExampleSetGenerator"     
     class       = "edu.udo.cs.yale.operator.generator.NominalExampleSetGenerator"
     description = "Generates an example set based on nominal attributes."
     group       = "IO.Generator"/>

  <operator 
     name        = "MassiveDataGenerator"     
     class       = "edu.udo.cs.yale.operator.generator.MassiveDataGenerator"
     description = "Generates huge amounts of data for testing purposes."
     group       = "IO.Generator"/>

  <operator 
     name        = "MultipleLabelGenerator"     
     class       = "edu.udo.cs.yale.operator.generator.MultipleLabelGenerator"
     description = "Generates an example set based on numerical attributes and with more than one label."
     group       = "IO.Generator"/>

</operators>
